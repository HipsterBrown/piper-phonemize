name: Build Wheels

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build_wheels:
    name: Build wheels on ${{matrix.os}}-${{matrix.arch}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        include:
          - {os: macos-latest, arch: x86_64, build: "*"}
          - {os: macos-latest, arch: arm64, build: "*"}
          - {os: ubuntu-latest, arch: x86_64, build: "*"}
          - {os: ubuntu-latest, arch: aarch64, build: "*[61]-manylinux_aarch64"}
          - {os: ubuntu-latest, arch: aarch64, build: "*[72]-manylinux_aarch64"}
          - {os: ubuntu-latest, arch: aarch64, build: "*[83]-manylinux_aarch64"}
          - {os: ubuntu-latest, arch: aarch64, build: "*[94]-manylinux_aarch64"}
          - {os: ubuntu-latest, arch: aarch64, build: "*[05]-manylinux_aarch64"}

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build cpp sources
        run: make clean && make
        if: ${{ matrix.os != 'ubuntu-latest' }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_SKIP: '*-musllinux*'
        with:
          config-file: ./pyproject.toml


      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{matrix.os}}-${{matrix.arch}}-${{strategy.job-index}}
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
